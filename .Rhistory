cat("ðŸ“° Title:", title, "\n")
library(xml2)
rss <- read_xml("https://feeds.bbci.co.uk/news/rss.xml")
items <- xml_find_all(rss, ".//item")
first <- items[1]
title <- xml_text(xml_find_first(first, "title"))
link  <- xml_text(xml_find_first(first, "link"))
image <- xml_attr(xml_find_first(first, ".//media:thumbnail | .//media:content"), "url")
cat("ðŸ“° Title:", title, "\n")
cat("ðŸ–¼ Image:", image, "\n")
cat("ðŸ”— Link:", link, "\n")
rss <- read_xml("https://feeds.bbci.co.uk/news/rss.xml")
items <- xml_find_all(rss, ".//item")
first <- items[1]
title <- xml_text(xml_find_first(first, "title"))
link  <- xml_text(xml_find_first(first, "link"))
image <- xml_attr(xml_find_first(first, ".//media:thumbnail | .//media:content"), "url")
cat(" Title:", title, "\n")
cat(" Image:", image, "\n")
cat(" Link:", link, "\n")
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
library(GGally)
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
data <- read_excel("who_ambient_air_quality_database_version_2024_(v6.1).xlsx")
data <- read_excel("C:\Users\admin\OneDrive\Desktop\DPR\who_ambient_air_quality_database_version_2024_(v6.1) (3).xlsx")
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1) (3).xlsx")
data
glimpse(data)
data <- read_excel("C:\Users\admin\OneDrive\Desktop\DPR\who_ambient_air_quality_database_version_2024_(v6.1) (3).xlsx")
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1) (3).xlsx")
data
glimpse(data)
glimpse(data)
glimpse(data)
glimpse(data)
glimpse(data)
view(data)
View(data)
head(data)
df
df
data
glimpse(data)
glimpse(data)
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1) (3).xlsx")
data
View(data)
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1) (3).xlsx")
data
View(data)
glimpse(data)
glimpse(data)
glimpse(data)
pollutants <- data %>%
select(Country, City, Year, `PM2.5`, `PM10`, `NO2`, `SO2`, `O3`)
pollutants <- data %>%
select(Country_name, City, Year, `PM2.5`, `PM10`, `NO2`, `SO2`, `O3`)
data
library(readxl)
library(dplyr)
library(ggplot2)
library(corrplot)
data <- read_excel("C:\Users\admin\OneDrive\Desktop\DPR\who_ambient_air_quality_database_version_2024_(v6.1)ok.xlsx")
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1)ok.xlsx")
data
data <- read_excel("who_ambient_air_quality_database_version_2024_(v6.1)ok")
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1)ok.xlsx")
data
View(data)
glimpse(data)
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1)ok.xlsx")
data
View(data)
glimpse(data)
pollutants <- data %>%
select(Country_name, City, Year, `PM2.5`, `PM10`, `NO2`, `SO2`, `O3`)
pollutants <- data %>%
select(country_name , City, Year, `PM2.5`, `PM10`, `NO2`, `SO2`, `O3`)
pollutants <- data %>%
select(country_name ,city , year, `PM2.5`, `PM10`, `NO2`, `SO2`, `O3`)
glimpse(data)
names(data) <- tolower(names(data))
names(data) <- tolower(names(data))
names(data) <- tolower(names(data))
names(data) <- tolower(names(data))
tolower
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(GGally)
install.packages(c("readxl","dplyr","ggplot2","tidyr","GGally","broom","caret","patchwork","scales","janitor"))
remove.packages(c("readxl","dplyr","ggplot2","tidyr","GGally","broom","caret","patchwork","scales","janitor"))
install.packages(c("readxl","dplyr","ggplot2","tidyr","GGally","broom","caret","patchwork","scales","janitor"))
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(GGally)
library(broom)
library(caret)
library(patchwork)
library(scales)
library(janitor)
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1)ok.xlsx")
data <- data %>% janitor::clean_names()
glimpse(data)
head(data)
expected_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov",
"country_name","city","year","population","latitude","longitude")
expected_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov",
"country_name","city","year","population","latitude","longitude")
data_clean <- data %>%
mutate(across(all_of(num_cols),
~ na_if(., "NA") %>% as.character() %>% gsub(",", "", .) %>% as.numeric()))
head(data)
expected_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov",
"country_name","city","year","population","latitude","longitude")
data_clean <- data %>%
mutate(across(all_of(num_cols),
~ na_if(., "NA") %>% as.character() %>% gsub(",", "", .) %>% as.numeric()))
install.packages(c("readxl","dplyr","ggplot2","tidyr","GGally","broom","caret","patchwork","scales","janitor"))
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(GGally)
library(broom)
library(caret)
library(patchwork)
library(scales)
library(janitor)
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1)ok.xlsx")
data <- data %>% janitor::clean_names()
glimpse(data)
head(data)
expected_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov",
"country_name","city","year","population","latitude","longitude")
data_clean <- data %>%
mutate(across(all_of(num_cols),
~ na_if(., "NA") %>% as.character() %>% gsub(",", "", .) %>% as.numeric()))
num_cols <- intersect(names(data), c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov",
"population","latitude","longitude"))
data_clean <- data %>%
mutate(across(all_of(num_cols),
~ na_if(., "NA") %>% as.character() %>% gsub(",", "", .) %>% as.numeric()))
num_cols <- intersect(names(data), c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov",
"population","latitude","longitude"))
data_clean <- data %>%
mutate(across(all_of(num_cols),
~ na_if(., "NA") %>% as.character() %>% gsub(",", "", .) %>% as.numeric()))
data_clean <- data %>%
mutate(across(all_of(num_cols),
~ na_if(., "NA") %>% as.character() %>% as.numeric()))
num_cols <- intersect(names(data), c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov",
"population","latitude","longitude"))
data_clean <- data %>%
mutate(across(all_of(num_cols),
~ na_if(., "NA") %>% as.character() %>% gsub(",", "", .) %>% as.numeric()))
install.packages(c("readxl","dplyr","ggplot2","tidyr","GGally","broom","caret","patchwork","scales","janitor"))
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(GGally)
library(broom)
library(caret)
library(patchwork)
library(scales)
library(janitor)
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1)ok.xlsx")
data <- data %>% janitor::clean_names()
glimpse(data)
head(data)
expected_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov",
"country_name","city","year","population","latitude","longitude")
num_cols <- intersect(names(data), c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov",
"population","latitude","longitude"))
data_clean <- data %>%
mutate(across(all_of(num_cols),
~ na_if(., "NA") %>% as.character() %>% gsub(",", "", .) %>% as.numeric()))
data_clean <- data %>%
mutate(across(all_of(num_cols),
~ na_if(., "NA") %>% as.character() %>% gsub(",", "", .) %>% as.numeric()))
pollutants <- data %>%
select(country_name ,city , year,pm25_concentration ,pm10_tempcov , `NO2`, `SO2`, `O3`)
library(rvest)
library(dplyr)
library(stringr)
session <- bow(
url="https://www.scrapethissite.com/pages/simple/"
)
library(rvest)
library(dplyr)
library(stringr)
url="https://www.scrapethissite.com/pages/simple/"
library(rvest)
library(dplyr)
library(stringr)
url="https://www.scrapethissite.com/pages/simple/"
session2<- bow( url="https://www.scrapethissite.com/pages/simple/")
headlines <- page %>%
html_elements("h3, h2") %>%
html_text2() %>%
str_squish() %>%
unique()
headlines <- page %>%
html_elements("h3, h2") %>%      # Headline tags typically used on the BBC site
html_text2() %>%
str_squish() %>%
unique()
library(rvest)
library(dplyr)
library(stringr)
url="https://www.scrapethissite.com/pages/simple/"
page <- read_html(url)
headlines <- page %>%
html_elements("h3, h2") %>%      # Headline tags typically used on the BBC site
html_text2() %>%
str_squish() %>%
unique()
head(headlines, 10)
data{
data(
"country"=country ,
"population"=population
)
df=pd.DataFrame(data)
country=headlines
population=1,2,3,4,5,6,7,8,9,10
country=headlines
population=1234567890
data(
"country"=country ,
"population"=population
)
df=pd.DataFrame(data)
df=data.frame(
"country"=headlines,
"population"=population
)
df
df=data.frame(
"country"=headlines,
"population"=123456789
)
df
df=data.frame(
"country"=headlines,
"population"=1,2,3,4,5,6
)
df
library(rvest)
library(dplyr)
library(stringr)
url <- "https://www.scrapethissite.com/pages/forms/"
page <- read_html(url)
# Locate the table node(s). Inspecting the HTML shows there's a table
# (or tabular layout) containing the team stats.
# Letâ€™s assume there is a <table> element; if not, one can use CSS selectors
# to pick up rows/tr elements.
tbl <- page %>%
html_element("table")    # or a more specific selector if necessary
if (is.null(tbl)) {
stop("No <table> element found on the page. Inspect HTML for correct selector.")
}
# Convert to a data frame
df <- tbl %>%
html_table(fill = TRUE)
# Clean / inspect the first few rows
df <- df %>%
mutate(across(everything(), str_squish))
head(df, 10)
library(rvest)
library(dplyr)
library(stringr)
url <- "https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population"
page <- read_html(url)
# Locate the table node(s). Inspecting the HTML shows there's a table
# (or tabular layout) containing the team stats.
# Letâ€™s assume there is a <table> element; if not, one can use CSS selectors
# to pick up rows/tr elements.
tbl <- page %>%
html_element("table")    # or a more specific selector if necessary
if (is.null(tbl)) {
stop("No <table> element found on the page. Inspect HTML for correct selector.")
}
# Convert to a data frame
df <- tbl %>%
html_table(fill = TRUE)
# Clean / inspect the first few rows
df <- df %>%
mutate(across(everything(), str_squish))
head(df, 10)
iris_data <- load("iris")
iris_data <- data("iris")
head(iris_data)
data("iris")
head(iris)
data(iris)
head(iris)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color=Species)) +
geom_point(size = 3, alpha = 0.7) +
labs(title = "Clusters by Sepal Measurements",
x = "Sepal Length",
y = "Sepal Width") +
theme_minimal()
library(ggplot2)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color=Species)) +
geom_point(size = 3, alpha = 0.7) +
labs(title = "Clusters by Sepal Measurements",
x = "Sepal Length",
y = "Sepal Width") +
theme_minimal()
iris_data <- scale(iris[, 1:4])
iris_data
set.seed(42)
iris_clusters <- kmeans(iris_data, centers = 3)
# View the cluster assignments for the first few rows
head(iris_clusters$cluster)
iris_data <- scale(iris[, 1:4])
iris_data
set.seed(42)
iris_clusters <- kmeans(iris_data, centers = 3)
# View the cluster assignments for the first few rows
head(iris_clusters$cluster)
data_clean <- data %>%
mutate(across(all_of(num_cols),
~ na_if(., "NA") %>% as.character() %>% gsub(",", "", .) %>% as.numeric()))
install.packages(c("readxl","dplyr","ggplot2","tidyr","GGally","broom","caret","patchwork","scales","janitor"))
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(GGally)
library(broom)
library(caret)
library(patchwork)
library(scales)
library(janitor)
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1)ok.xlsx")
data <- data %>% janitor::clean_names()
glimpse(data)
head(data)
head(data)
pm2_candidates <- colnames(data)[str_detect(tolower(colnames(data)), "pm2|pm_2|pm25")]
colnames(data)
pm2_candidates <- colnames(data)[str_detect(tolower(colnames(data)), "pm2|pm_2|pm25")]
library(tidyverse)
pm2_candidates <- colnames(data)[str_detect(tolower(colnames(data)), "pm2|pm_2|pm25")]
pm10_candidates <- colnames(data)[str_detect(tolower(colnames(data)), "pm10|pm_10")]
pm25_col <- pm2_candidates[1]
pm10_col <- pm10_candidates[1]
df <- data %>%
mutate(
PM25 = parse_number(as.character(.data[[pm25_col]])),
PM10 = parse_number(as.character(.data[[pm10_col]]))
) %>%
filter(!is.na(PM25) & !is.na(PM10))
df <- data %>%
mutate(
PM25 = parse_number(as.character(.data[[pm25_col]])),
PM10 = parse_number(as.character(.data[[pm10_col]]))
) %>%
filter(!is.na(PM25) & !is.na(PM10))
df
colSums(is.na(df_raw))
colSums(is.na(data))
df <- data %>%
mutate(
PM25 = parse_number(as.character(.data[[pm25_col]])),
PM10 = parse_number(as.character(.data[[pm10_col]]))
) %>%
filter(!is.na(PM25) & !is.na(PM10))
df
df %>%
summarize(
n = n(),
PM25_mean = mean(PM25, na.rm = TRUE),
PM10_mean = mean(PM10, na.rm = TRUE),
PM25_median = median(PM25, na.rm = TRUE),
PM10_median = median(PM10, na.rm = TRUE)
)
ggplot(df, aes(x = PM10, y = PM25)) +
geom_point(alpha = 0.4, color = "#2c7fb8") +
geom_smooth(method = "lm", se = TRUE, color = "#d95f0e") +
labs(
title = "Scatter Plot: PM2.5 vs PM10",
subtitle = "Linear regression fit with 95% confidence interval",
x = "PM10 (Âµg/mÂ³)",
y = "PM2.5 (Âµg/mÂ³)"
) +
theme_minimal()
install.packages(c("readxl","dplyr","ggplot2","tidyr","GGally","broom","caret","patchwork","scales","janitor"))
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(GGally)
library(broom)
library(caret)
library(patchwork)
library(scales)
library(janitor)
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1)ok.xlsx")
colnames(data)
glimpse(data)
head(data)
colSums(is.na(data))
library(tidyverse)
pm2_candidates <- colnames(data)[str_detect(tolower(colnames(data)), "pm2|pm_2|pm25")]
pm10_candidates <- colnames(data)[str_detect(tolower(colnames(data)), "pm10|pm_10")]
pm25_col <- pm2_candidates[1]
pm10_col <- pm10_candidates[1]
df <- data %>%
mutate(
PM25 = parse_number(as.character(.data[[pm25_col]])),
PM10 = parse_number(as.character(.data[[pm10_col]]))
) %>%
filter(!is.na(PM25) & !is.na(PM10))
df
df %>%
summarize(
n = n(),
PM25_mean = mean(PM25, na.rm = TRUE),
PM10_mean = mean(PM10, na.rm = TRUE),
PM25_median = median(PM25, na.rm = TRUE),
PM10_median = median(PM10, na.rm = TRUE)
)
ggplot(df, aes(x = PM10, y = PM25)) +
geom_point(alpha = 0.4, color = "#2c7fb8") +
geom_smooth(method = "lm", se = TRUE, color = "#d95f0e") +
labs(
title = "Scatter Plot: PM2.5 vs PM10",
subtitle = "Linear regression fit with 95% confidence interval",
x = "PM10 (Âµg/mÂ³)",
y = "PM2.5 (Âµg/mÂ³)"
) +
theme_minimal()
install.packages(c("readxl","dplyr","ggplot2","tidyr","GGally","broom","caret","patchwork","scales","janitor"))
install.packages(c("readxl","dplyr","ggplot2","tidyr","GGally","broom","caret","patchwork","scales","janitor"))
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(GGally)
library(broom)
library(caret)
library(patchwork)
library(scales)
library(janitor)
data <- read_excel("C:\\Users\\admin\\OneDrive\\Desktop\\DPR\\who_ambient_air_quality_database_version_2024_(v6.1)ok.xlsx")
colnames(data)
glimpse(data)
head(data)
colSums(is.na(data))
library(tidyverse)
pm2_candidates <- colnames(data)[str_detect(tolower(colnames(data)), "pm2|pm_2|pm25")]
pm10_candidates <- colnames(data)[str_detect(tolower(colnames(data)), "pm10|pm_10")]
pm25_col <- pm2_candidates[1]
pm10_col <- pm10_candidates[1]
df <- data %>%
mutate(
PM25 = parse_number(as.character(.data[[pm25_col]])),
PM10 = parse_number(as.character(.data[[pm10_col]]))
) %>%
filter(!is.na(PM25) & !is.na(PM10))
df
df %>%
summarize(
n = n(),
PM25_mean = mean(PM25, na.rm = TRUE),
PM10_mean = mean(PM10, na.rm = TRUE),
PM25_median = median(PM25, na.rm = TRUE),
PM10_median = median(PM10, na.rm = TRUE)
)
ggplot(df, aes(x = PM10, y = PM25)) +
geom_point(alpha = 0.4, color = "#2c7fb8") +
geom_smooth(method = "lm", se = TRUE, color = "#d95f0e") +
labs(
title = "Scatter Plot: PM2.5 vs PM10",
subtitle = "Linear regression fit with 95% confidence interval",
x = "PM10 (Âµg/mÂ³)",
y = "PM2.5 (Âµg/mÂ³)"
) +
theme_minimal()
cor_test <- cor.test(df$PM10, df$PM25, method = "pearson")
tidy(cor_test)
lm_fit <- lm(PM25 ~ PM10, data = df)
summary(lm_fit)
glance(lm_fit)
install.packages("ggpmisc")
install.packages("ggpubr")
data$year[is.na(data$year)] <- mean(data$year, na.rm = TRUE)
library(tidyverse)
colSums(is.na(data))
load("C:/Users/admin/OneDrive/Documents/GitHub/air_quality_analysis/.RData")
